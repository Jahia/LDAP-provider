Jahia LDAP Connector

* Overview

  This module provides LDAP provider implementations for user and user groups.
  From version 6.5 up Jahia supports multiple LDAP providers to be used simultaneously
  to achieve better flexibility and data aggregation. 
  
* Registering LDAP providers

  The following steps show how to enable and configure the user and user group LDAP providers
  declaring them in a custom Jahia module.
  
  [[1]] Create the following folder structure for your module:
  
+------------------------------------------------
  META-INF
     | + spring
     |     | - users-ldap.xml
     |     | - groups-ldap.xml
     | - MANIFEST.MF
+------------------------------------------------
   
  [[2]]  The content of the <<<MANIFEST.MF>>> file should include three mandatory attributes:
  
+------------------------------------------------
  ...
  depends: Jahia LDAP connector
  package-name: My Custom LDAP Provider
  root-folder: my-custom-ldap-provider
  ...
+------------------------------------------------
  
  <<<depends>>> attribute defines a dependency to the <Jahia LDAP connector> module (this module).
  
  <<<package-name>>> specifies your module ID

  <<<root-folder>>> contains the name of the folder, the content of the module will be extracted into (a sub-folder of the <<</modules>>> folder). 
  
  All other attributes in <<<MANIFEST.MF>>> file are optional.  

  [[3]] LDAP user provide configuration in <<<users-ldap.xml>>>
  
  The file contains a Spring bean definition for the user provider as follows:
  
+------------------------------------------------
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean parent="JahiaUserManagerLDAPProvider">
        <property name="ldapProperties">
            <map>
                <entry key="url" value="ldap://127.0.0.1:389/"/>
                <entry key="public.bind.dn" value=""/>
                <entry key="public.bind.password" value=""/>
                <entry key="uid.search.name" value="dc=jahia"/>
            </map>
        </property>
    </bean>
    
</beans>
+------------------------------------------------
  
  The bean has <<<JahiaUserManagerLDAPProvider>>> as its parent and should override
  at least the <<<ldapProperties>>> property to properly configure connector and
  LDAP attribute mapping. Default LDAP parameter values are defined in parent and
  can be overridden in the <<<ldapProperties>>> map. See {{{User} property reference}} for more details.
  
  In case multiple LDAP user providers are used, additionally two properties need to
  be provided to specify a unique provider key and a priority (lookup sequence):
  
+------------------------------------------------
...
    <bean parent="JahiaUserManagerLDAPProvider">
    ...
        <property name="key" value="myldap"/>
        <property name="priority" value="2"/>
    ...
    </bean>
...
+------------------------------------------------
  
  
  The <<<users-ldap.xml>>> file name is arbitrary and the file itself can be omitted,
  if no LDAP user provider is needed.

  [[4]] LDAP user group provide configuration in <<<groups-ldap.xml>>>
  
  The file contains a Spring bean definition for the user group provider as follows:
  
+------------------------------------------------
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean parent="JahiaGroupManagerLDAPProvider">
        <property name="ldapProperties">
            <map>
                <entry key="url" value="ldap://127.0.0.1:389/"/>
                <entry key="public.bind.dn" value=""/>
                <entry key="public.bind.password" value=""/>
                <entry key="search.name" value="dc=jahia"/>
            </map>
        </property>
    </bean>

</beans>
+------------------------------------------------
  
  The bean has <<<JahiaGroupManagerLDAPProvider>>> as its parent and should override
  at least the <<<ldapProperties>>> property to properly configure connector and
  LDAP attribute mapping. Default LDAP parameter values are defined in parent and
  can be overridden in the <<<ldapProperties>>> map. See {{{group} property reference}} for more details.
  
  In case multiple LDAP user group providers are used, additionally two properties need to
  be provided to specify a unique provider key and a priority (lookup sequence):
  
+------------------------------------------------
...
    <bean parent="JahiaGroupManagerLDAPProvider">
    ...
        <property name="key" value="myldap"/>
        <property name="priority" value="2"/>
    ...
    </bean>
...
+------------------------------------------------
  
  
  The <<<groups-ldap.xml>>> file name is arbitrary and the file itself can be omitted,
  if no LDAP user provider is needed.

  [[5]] Zip the content of your module into a file with <<<.war>>>, e.g. <<<my-custom-ldap-provider.war>>>
  
  [[6]] Copy the module WAR file into the <<<WEB-INF/var/shared_module>>> folder of your server (all cluster nodes)
  
  [[7]] If the module hot deployment is enabled the providers will be registered automatically.
  Otherwise a server restart is required for a module to be deployed and providers to be registered.
  
    []
    
* {User} provider properties reference

  TODO: provide description of all connection configuration properties and attribute mappings 
  for user providers 

* User {group} provider properties reference

  TODO: provide description of all connection configuration properties and attribute mappings
  for user group providers 
